version: '3.8'

services:
  frontend:
    image: jigglyy/frontend:latest
    deploy:
      placement:
        constraints:
          - node.labels.role == frontend
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz.html"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - todo-app-network

  backend:
    image: jigglyy/backend:latest
    deploy:
      placement:
        constraints:
          - node.labels.role == backend
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - PORT=3000
      - NODE_ENV=development
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=todoapp
      - DB_PASSWORD=secret123
      - DB_NAME=todos
    expose:
      - 3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - todo-app-network

  database:
    image: postgres:17-alpine
    deploy:
      placement:
        constraints:
          - node.labels.role == database
    environment:
      - POSTGRES_USER=todoapp
      - POSTGRES_PASSWORD=secret123
      - POSTGRES_DB=todos
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todoapp"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - todo-app-network

volumes:
  postgres_db_data:

networks:
  todo-app-network:
    driver: overlay