apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-fullstack-app-chart.fullname" . }}-backend
  labels:
    {{- include "my-fullstack-app-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "my-fullstack-app-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "my-fullstack-app-chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          ports:
            - containerPort: 3000
          env:
            - name: DB_HOST
              value: {{ .Values.backend.config.db.host | quote }}
            - name: DB_PORT
              value: {{ .Values.backend.config.db.port | quote }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-fullstack-app-chart.fullname" . }}-database
                  key: username
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-fullstack-app-chart.fullname" . }}-database
                  key: database
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-fullstack-app-chart.fullname" . }}-database
                  key: password
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
